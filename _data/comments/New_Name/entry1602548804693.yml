_id: c5bcd6e0-0cea-11eb-b361-cf8c1b909a91
message: "I'll keep you in mind for Beta testing for certain! Thanks for the offer. I will definitely need dedicated fans of Ultima IV to pull it off, as I will need full play throughs, and considering Trinity already doubles the difficulty level of an already difficult game, that is nothing to sneeze at.\r\n\r\nI'm no experienced programmer (this is my first real foray into it so I have never 'discussed it' nor do I really know the terminology), but I'll outline my approach for Active Player. I made a 'global' variable, Active, then added a 'goto' at the bottom of the com_Main function. I then made an 'Active_player' function that takes keystrokes from 1-8 and 0. Active player then sets Active, and also sets the activeChara variable to whoever. When com_Main gets near the end of its routine, it makes a check for Active. If 'on' it goes to the 'goto' at the top of the function. Otherwise it goes to the next step which sets the next character in the party to activeChara, then goes to the top of the function (normal behaviour)\r\n\r\nThat's about it. Mind you Active player only works for combat. I am not using it outside of combat.\r\n\r\nAs for running out of memory, or hitting the limit, yes, it is crazy. I have been coding all of Trinity under this restriction for most of the past two years. Adding a line of code means streamlining a line of code elsewhere. There is room, probably, to add the functions you are planning to in U4DosRandomizer, but you will hit the limit at some point.\r\n\r\nI spent about 3 months trying to solve this early in development, but there is no easy solution. The code is filling up the 'segment' and the only thing to do is reduce the code, or find a way to split the code over two 'segments'. Which would mostly mean rewriting everything. The text, such as in LB is held on a different segment, the TEXT segment, so it is not connected. But I have hit THAT limit as well. Because I pushed a lot of the code into the TEXT segment to free up code in the code (DATA?) segment. So actually, pushing it into a separate file would help a little. A solution I had thought to try. Yet, the code to read from a new LB file would be extravagant, and hardly worth the payoff it would free up for the TEXT segment only. Unless...the code for read .tlk files and an LB.tlk file could be combined. \r\n\r\nStill, it would be useful to have LBs tlk in a separate file. It would allow for more quest exposition, as currently I was limited by the TEXT segment filling up.\r\n\r\nHowever, I don't fully understand all this old DOS stuff, and there maybe a limit that is shared between the two in some way. Not sure."
name: Cambragol
email: c7aa9bacdc0634670cd27b1cb549a71a
url: 'https://cambragol.github.io/advent-of-the-trinity/'
hidden: ''
date: 1602548804
